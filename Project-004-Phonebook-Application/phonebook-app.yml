AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application Load Balancer 
  with Auto Scaling Group of Amazon Linux 2023 (ami-0005e0cfe09cc9050) EC2 Instances which host Python Flask Web Application.
  EC2 instances are placed within WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup,
  and allows tcp(3306) connections only within itself. RDS DB instance is placed within WebServerSecurityGroup 
  so that Database Server can communicate with Web Servers. Application Load Balancer is placed within ALBSecurityGroup 
  which allows http (80) connections from anywhere. WebServerASG Auto Scaling Group is using the LT 
  Launch Template in order to spin up instances needed. LT Launch Template is configured to prepare Python Flask 
  environment on EC2, and to deploy Phonebook Application on Flask Server after downloading the app code 
  from Github repository.
Parameters:
  MyVPC:
    Description: VPC Id of your existing account
    Type: AWS::EC2::VPC::Id

  KeyName:
    Description: Please enter your keyname 
    Type: AWS::EC2::KeyPair::KeyName

  Subnets:
    Description: Please select your subnets used by ALB
    Type: List<AWS::EC2::Subnet::Id>
  
Resources:
  
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  Enable HTTP for alb # Required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:  Enable HTTP for flask server and SSH for getting into EC2 # Required
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 
      VpcId: !Ref MyVPC
  
  LT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-0005e0cfe09cc9050
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags: 
              - Key: Name
                Value:  !Sub Web Server of ${AWS::StackName}
        UserData: 
          Fn::Base64:
            !Sub 
              - |
                #! /bin/bash 
                dnf update -y
                dnf install python3 -y
                dnf install python-pip -y
                pip3 install Flask==2.3.3
                pip3 install Flask-MySql
                pip3 install boto3
                dnf install git -y
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                TOKEN="xxxxxxxxxxxxxxxxxxxxxxxxxx"
                cd /home/ec2-user
                git clone https://$TOKEN@github.com/okti3535/project-004-phonebook-application.git
                python3 /home/ec2-user/project-004-phonebook-application/phonebook-app.py
              - MyDBURI: !GetAtt DBInstance.Endpoint.Address

  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthyThresholdCount: 2
      HealthCheckProtocol: HTTP
      ProtocolVersion: HTTP1
      Port: 80
      Protocol: HTTP 
      TargetType: instance 
      UnhealthyThresholdCount: 3
      VpcId: !Ref MyVPC
  
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !GetAtt ALBSecurityGroup.GroupId
      Subnets: !Ref Subnets
      Type: application

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref TG
          Type: forward
      LoadBalancerArn: !Ref ALB # Required
      Port: 80
      Protocol: HTTP

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref LT
        Version: !GetAtt LT.LatestVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !Ref TG

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        - EC2SecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId
      GroupDescription: Back-end database # Required

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t3.micro
      DBInstanceIdentifier: phonebook-app
      DBName: clarusway_phonebook 
      DBSecurityGroups: 
        - !Ref DBSecurityGroup
      Engine: MYSQL
      EngineVersion: 8.0.35
      MasterUserPassword: clarusway_1234
      MasterUsername: admin
      Port: 3306
      PubliclyAccessible: true
            
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ALB.DNSName
    Description: Phonebook Application Load Balancer URL